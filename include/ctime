// -*- C++ -*-
//===---------------------------- ctime -----------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
#pragma once
#pragma GCC system_header
#if defined(ctime_synopsis)
// Macros:
//     NULL
//     CLOCKS_PER_SEC
//     TIME_UTC // C++17
// Types:
//     clock_t
//     size_t
//     time_t
//     tm
//     timespec // C++17
namespace std
{
  clock_t clock();
  double difftime(time_t time1, time_t time0);
  time_t mktime(tm* timeptr);
  time_t time(time_t* timer);
  char* asctime(const tm* timeptr);
  char* ctime(const time_t* timer);
  tm*    gmtime(const time_t* timer);
  tm* localtime(const time_t* timer);
  size_t strftime(char* restrict s, size_t maxsize, const char* restrict format,
                  const tm* restrict timeptr);
  int timespec_get( struct timespec *ts, int base); // C++17
}  // std
#endif // ctime_synopsis

#include <__config>
#include <time.h>

_LIBCPP_BEGIN_NAMESPACE_STD

using ::clock_t;
using ::size_t;
using ::time_t;
using ::tm;
using ::timespec;
using ::clock;
using ::difftime;
using ::mktime;
using ::time;
#ifndef _LIBCPP_HAS_NO_THREAD_UNSAFE_C_FUNCTIONS
using ::asctime;
using ::ctime;
using ::gmtime;
using ::localtime;
#endif
using ::strftime;
#if defined(_LIBCPP_HAS_TIMESPEC_GET)
using ::timespec_get;
#endif

_LIBCPP_END_NAMESPACE_STD
